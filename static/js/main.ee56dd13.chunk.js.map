{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","tabIndex","aria-disabled","placeholder","role","src","alt","width","height","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee56dd13.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App container-fluid\">\n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n        <a className=\"navbar-brand\" href=\"/\">React Bootstrap Sass</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/\">Link</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link disabled\" href=\"/\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\n            </li>\n          </ul>\n          <form className=\"form-inline mt-2 mt-md-0\">\n            <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"/>\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n          </form>\n        </div>\n      </nav>\n    \n      <main role=\"main\" className=\"container\">\n        <div className=\"jumbotron\">\n          <h1>React Bootstrap Sass</h1>\n          <p className=\"lead\">This is how you can customise Bootstrap with Sass in React!</p>\n          <a className=\"btn btn-lg btn-primary\" href=\"https://github.com/loljoho/react-bootstrap-sass/\" role=\"button\">View on GitHub &raquo;</a>\n        </div>\n      </main>\n\n      <div className=\"container\">\n        <div className=\"row row-cols-1 row-cols-md-3 row-cols-lg-4\">\n\n          <div className=\"col mb-4\">\n            <div className=\"card h-100 text-white bg-primary mb-3\">\n              <div className=\"card-header\">Header</div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Primary card title</h5>\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col mb-4\">\n            <div className=\"card h-100 text-white bg-secondary mb-3\">\n              <div className=\"card-header\">Header</div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Secondary card title</h5>\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col mb-4\">\n            <div className=\"card h-100 text-white bg-success mb-3\">\n              <div className=\"card-header\">Header</div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Success card title</h5>\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col mb-4\">\n            <div className=\"card h-100 text-white bg-danger mb-3\">\n              <div className=\"card-header\">Header</div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Danger card title</h5>\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"col mb-4\">\n            <div className=\"card h-100 text-white bg-warning mb-3\">\n              <div className=\"card-header\">Header</div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Warning card title</h5>\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col mb-4\">\n            <div className=\"card h-100 text-white bg-danger mb-3\">\n              <div className=\"card-header\">Header</div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Danger card title</h5>\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col mb-4\">\n            <div className=\"card h-100 bg-light mb-3\">\n              <div className=\"card-header\">Header</div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Light card title</h5>\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col mb-4\">\n            <div className=\"card h-100 text-white bg-info mb-3\">\n              <div className=\"card-header\">Header</div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Info card title</h5>\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col mb-4\">\n            <div className=\"card h-100 text-white bg-dark mb-3\">\n              <div className=\"card-header\">Header</div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Dark card title</h5>\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col mb-4\">\n            <div className=\"card h-100 text-white bg-success mb-3\">\n              <div className=\"card-header\">Header</div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Success card title</h5>\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col mb-4\">\n            <div className=\"card h-100 text-white bg-secondary mb-3\">\n              <div className=\"card-header\">Header</div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Secondary card title</h5>\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"col mb-4\">\n            <div className=\"card h-100 text-white bg-primary mb-3\">\n              <div className=\"card-header\">Header</div>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Primary card title</h5>\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n      \n      <footer className=\"pt-4 my-md-5 pt-md-5 border-top\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md\">\n            <img className=\"mb-2\" src=\"/docs/4.4/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"24\" height=\"24\"/>\n            <small className=\"d-block mb-3 text-muted\">&copy; 2017-2019</small>\n          </div>\n          <div className=\"col-6 col-md\">\n            <h5>Features</h5>\n            <ul className=\"list-unstyled text-small\">\n              <li><a className=\"text-muted\" href=\"/\">Cool stuff</a></li>\n              <li><a className=\"text-muted\" href=\"/\">Random feature</a></li>\n              <li><a className=\"text-muted\" href=\"/\">Team feature</a></li>\n              <li><a className=\"text-muted\" href=\"/\">Stuff for developers</a></li>\n              <li><a className=\"text-muted\" href=\"/\">Another one</a></li>\n              <li><a className=\"text-muted\" href=\"/\">Last time</a></li>\n            </ul>\n          </div>\n          <div className=\"col-6 col-md\">\n            <h5>Resources</h5>\n            <ul className=\"list-unstyled text-small\">\n              <li><a className=\"text-muted\" href=\"/\">Resource</a></li>\n              <li><a className=\"text-muted\" href=\"/\">Resource name</a></li>\n              <li><a className=\"text-muted\" href=\"/\">Another resource</a></li>\n              <li><a className=\"text-muted\" href=\"/\">Final resource</a></li>\n            </ul>\n          </div>\n          <div className=\"col-6 col-md\">\n            <h5>About</h5>\n            <ul className=\"list-unstyled text-small\">\n              <li><a className=\"text-muted\" href=\"/\">Team</a></li>\n              <li><a className=\"text-muted\" href=\"/\">Locations</a></li>\n              <li><a className=\"text-muted\" href=\"/\">Privacy</a></li>\n              <li><a className=\"text-muted\" href=\"/\">Terms</a></li>\n            </ul>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}